substitutions:
  enc_id: enc_nex3


esphome:
  name: esp32-multi-control-7inch
  friendly_name: esp32-multi-control-7inch

esp32:
  board: az-delivery-devkit-v4
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "bK86BFY2ngStSA0pg/GKakO9io9VhLSByufMe09gFmA="

ota:
  password: "111d9250fa010987f7fee629364222eb"

wifi:
  manual_ip:
    static_ip: 172.16.1.36
    gateway: 172.16.1.1
    subnet: 255.255.255.0  
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Multi-Control-7Inch"
    password: "XEnHJwcqWebx"

captive_portal:
    

time:
  - platform: homeassistant
    id: esptime

uart:
  id: uart_2
  rx_pin: GPIO15
  tx_pin: GPIO2
#  baud_rate: 9600
  baud_rate: 115200

i2c:
  - id: bus_a
    sda: GPIO25
    scl: GPIO26
    scan: true 
  - id: bus_b
    sda: GPIO13
    scl: GPIO27
    scan: true 

tca9548a :
  - address: 0x70
    id: multiplex0
    i2c_id: bus_a
    channels:
      - bus_id: multiplex0channel0
        channel: 0
      - bus_id: multiplex0channel1
        channel: 1
      - bus_id: multiplex0channel2
        channel: 2
      - bus_id: multiplex0channel3
        channel: 3
      - bus_id: multiplex0channel4
        channel: 4
      - bus_id: multiplex0channel5
        channel: 5
      - bus_id: multiplex0channel6
        channel: 6
      - bus_id: multiplex0channel7
        channel: 7

pcf8574:

  - id: 'pcf8574_hub'
    i2c_id: bus_a
    address: 0x20
    pcf8575: true
  - id: 'pcf8574_hub_2'
    i2c_id: bus_b
    address: 0x20
    pcf8575: true
  - id: 'pcf8574_hub_3'
    i2c_id: bus_b
    address: 0x27
    pcf8575: true

sensor:

  - platform: ina219
    i2c_id: multiplex0channel0
    address: 0x40
    shunt_resistance: 0.1 ohm
    current:
      name: "INA219 Current ${enc_id}-0"
      id: ina219_current0
    power:
      name: "INA219 Power ${enc_id}-0"
      id: ina219_power0
    bus_voltage:
      name: "INA219 Bus Voltage ${enc_id}-0"
      id: ina219_bus_v0
    shunt_voltage:
      name: "INA219 Shunt Voltage ${enc_id}-0"
      id: ina219_shunt_v0
    max_voltage: 8.0V
    max_current: 3.2A
    update_interval: 60s

# ------------------------------------------------------
  - platform: ina219
    i2c_id: multiplex0channel1
    address: 0x40
    shunt_resistance: 0.1 ohm
    current:
      name: "INA219 Current ${enc_id}-1"
      id: ina219_current1
    power:
      name: "INA219 Power ${enc_id}-1"
      id: ina219_power1
    bus_voltage:
      name: "INA219 Bus Voltage ${enc_id}-1"
      id: ina219_bus_v1
    shunt_voltage:
      name: "INA219 Shunt Voltage ${enc_id}-1"
      id: ina219_shunt_v1
    max_voltage: 12.8V
    max_current: 3.2A
    update_interval: 60s
#--------------------------------------------------------
  - platform: wifi_signal
    name: "${enc_id} WiFi Signal Sensor"
    id: my_wifi_2
    update_interval: 60s
#--------------------------------------------------------
  - platform: internal_temperature
    name: "${enc_id}-Internal Temperature"
    id: internal_cpu
    unit_of_measurement: "Â°C"
    update_interval: 10s
# ------------------------------------------------------
#--------------------------------------------------------

  - platform: homeassistant
    id: hw_htr_voltage
    entity_id: sensor.water_heater_switch_electric_production_v

#--------------------------------------------------------
#-------------------------------------------------------------
  - platform: template
    name: "${enc_id} Irrigation Time Remaining Sensor"
    unit_of_measurement: 'Sec'
    lambda: "return id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value();"
    update_interval: 1s 
    accuracy_decimals: 0
  - platform: template
    name: "${enc_id} Irrigation Active Valve"
    id: active_valve
    accuracy_decimals: 0
    lambda: |-
     if (id(${enc_id}_lawn_sprinkler_ctrlr).active_valve().has_value()){
      auto active_valve = id(${enc_id}_lawn_sprinkler_ctrlr).active_valve().value() + 1;
      return active_valve;
      }else{
        return 0;
      }
    update_interval: 5s






#-------------------------------------------------------------
#-------------------------------------------------------------
# Nextion Slider Button to change Sprinkler Multiplier
#-------------------------------------------------------------
#-------------------------------------------------------------


  - platform: nextion
    id: slider
    component_name: page0.n0
    on_value:
      then:
        - homeassistant.service:
            service: number.set_value
            data:
              entity_id: number.esp32_multi_control_7inch_enc_nex3_sprinkler_controller_multiplier
              value: !lambda 'return x;'
    update_interval: 5s

#-------------------------------------------------------------
#-------------------------------------------------------------
text_sensor:
  - platform: wifi_info
    ip_address:
      id: myip_2
      name: ${enc_id} ESP IP Address
    ssid:
      id: myssid_2
      name: ${enc_id} ESP Connected SSID

  - platform: template
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
#-------------------------------------------------------------
#----------------------------------------------------------------------
  - platform: version
    name: "ESPHome Version"
    id: esp_version
    hide_timestamp: true
#-------------------------------------------------------------
#-------------------------------------------------------------
sprinkler:
  - id: ${enc_id}_lawn_sprinkler_ctrlr
    main_switch: "${enc_id}_Lawn Sprinklers"
    auto_advance_switch: "${enc_id_Lawn Sprinklers Auto Advance"
    reverse_switch: "${enc_id}_Lawn Sprinklers Reverse"
    valve_overlap: 3s
    pump_start_valve_delay: 10s
    valves:
      - valve_switch: "${enc_id}_Front Lawn 1"
        enable_switch: "${enc_id}_Enable Front Lawn 1"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw0
      - valve_switch: "${enc_id}_Front Lawn 2"
        enable_switch: "${enc_id}_Enable Front Lawn 2"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw1
      - valve_switch: "${enc_id}_Front Lawn 3"
        enable_switch: "${enc_id}_Enable Front Lawn 3"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw2
#-------------------------------------------------------------
      - valve_switch: "${enc_id}_Front Lawn 4"
        enable_switch: "${enc_id}_Enable Front Lawn 4"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw3
      - valve_switch: "${enc_id}_Front Lawn 5"
        enable_switch: "${enc_id}_Enable Front Lawn 5"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw4
      - valve_switch: "${enc_id}_Front Lawn 6"
        enable_switch: "${enc_id}_Enable Front Lawn 6"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw5
#-------------------------------------------------------------
      - valve_switch: "${enc_id}_Front Lawn 7"
        enable_switch: "${enc_id}_Enable Front Lawn 7"
        pump_switch_id: ${enc_id}_dpdt2
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw6
      - valve_switch: "${enc_id}_Front Lawn 8"
        enable_switch: "${enc_id}_Enable Front Lawn 8"
        pump_switch_id: ${enc_id}_dpdt2
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw7
      - valve_switch: "${enc_id}_Front Lawn 9"
        enable_switch: "${enc_id}_Enable Front Lawn 9"
        pump_switch_id: ${enc_id}_dpdt2
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw8
#-------------------------------------------------------------
      - valve_switch: "${enc_id}_Front Lawn 10"
        enable_switch: "${enc_id}_Enable Front Lawn 10"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw9
      - valve_switch: "${enc_id}_Front Lawn 11"
        enable_switch: "${enc_id}_Enable Front Lawn 11"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw10
      - valve_switch: "${enc_id}_Front Lawn 12"
        enable_switch: "${enc_id}_Enable Front Lawn 12"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw11
#-------------------------------------------------------------
      - valve_switch: "${enc_id}_Front Lawn 13"
        enable_switch: "${enc_id}_Enable Front Lawn 13"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw12
      - valve_switch: "${enc_id}_Front Lawn 14"
        enable_switch: "${enc_id}_Enable Front Lawn 14"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw13
      - valve_switch: "${enc_id}_Front Lawn 15"
        enable_switch: "${enc_id}_Enable Front Lawn 15"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw14
#-------------------------------------------------------------
      - valve_switch: "${enc_id}_Front Lawn 16"
        enable_switch: "${enc_id}_Enable Front Lawn 16"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw15
      - valve_switch: "${enc_id}_Front Lawn 17"
        enable_switch: "${enc_id}_Enable Front Lawn 17"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw16
      - valve_switch: "${enc_id}_Front Lawn 18"
        enable_switch: "${enc_id}_Enable Front Lawn 18"
        pump_switch_id: ${enc_id}_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw17
#-------------------------------------------------------------
#-------------------------------------------------------------
# Configuration to set multiplier via number
#-------------------------------------------------------------
#-------------------------------------------------------------
number:
  - platform: template
    id: ${enc_id}_sprinkler_ctrlr_multiplier
    name: "${enc_id}_Sprinkler Controller Multiplier"
    min_value: 1.0
    max_value: 5.0
    step: 1.0
    lambda: "return id(${enc_id}_lawn_sprinkler_ctrlr).multiplier();"
    set_action:
      - sprinkler.set_multiplier:
          id: ${enc_id}_lawn_sprinkler_ctrlr
          multiplier: !lambda 'return x;'
    update_interval: 5s
#-------------------------------------------------------------
#------   Nextion  Page Button actions   ---------------------
#-------------------------------------------------------------
#-------------------------------------------------------------
binary_sensor:

  - platform: nextion
    page_id: 0
    component_id: 52
    id: pg_one
    on_press:
      then:
        - lambda: |-
            id(nextion_page_id)=1;
            id(nextion1).goto_page("page1");
        - component.update: nextion1

  - platform: nextion
    page_id: 1
    component_id: 33
    id: pg_zero
    on_press:
      then:
        - lambda: |-
            id(nextion_page_id)=0;
            id(nextion1).goto_page("page0");
        - component.update: nextion1


#-------------------------------------------------------------
#------   Nextion Valve Button + Heater Switch actions   -----
#-------------------------------------------------------------
#-------------------------------------------------------------


  - platform: nextion
    page_id: 0
    component_id: 40  
    id: main_toggle
    on_press:
      then:
        - logger.log: "Main Valve On was touched"
        - switch.toggle: ${enc_id}_dpdt3
        - component.update: nextion1


  - platform: nextion
    page_id: 0
    component_id: 38    
    id: irrig_toggle
    on_press:
      then:
        - logger.log: "Irrig Valve On was touched"
        - switch.toggle: ${enc_id}_dpdt4
        - component.update: nextion1


  - platform: nextion
    page_id: 0
    component_id: 39    
    id: hw_toggle
    on_press:
      then:
        - logger.log: "HW Valve On was touched"
        - switch.toggle: ${enc_id}_dpdt5
        - component.update: nextion1


  - platform: nextion
    page_id: 0
    component_id: 53    
    id: hw_pwr_toggle
    on_press:
      then:
      - homeassistant.service:
          service: switch.toggle
          data:
            entity_id: switch.direct_wire_40a_outdoor_switch_500s

#-------------------------------------------------------------
#------   Nextion Button Sprinkler Start   -------------------
#-------------------------------------------------------------
#-------------------------------------------------------------

  - platform: nextion
    page_id: 0
    component_id: 34    
    id: spr_start
    on_press:
      - logger.log: "Sprinkler Cycle On was touched"
      - lambda: |- 

               if (id(active_valve).state) {                
                }else{
                id(${enc_id}_lawn_sprinkler_ctrlr).start_full_cycle();
               }



#-------------------------------------------------------------
#------   Nextion Button actions   ---------------------------
#---------18 Zone Enable Buttons     -------------------
#-------------------------------------------------------------




  - platform: nextion
    page_id: 1
    component_id: 17
    component_name: page1.Z1 # Only needed to support changing colors
    id: z1_enable
    on_press:
      - logger.log: "Z1 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(0)->toggle();
               }



  - platform: nextion
    page_id: 1
    component_id: 15
    component_name: page1.Z2 # Only needed to support changing colors
    id: z2_enable
    on_press:
      - logger.log: "Z2 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(1)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 16
    component_name: page1.Z3 # Only needed to support changing colors
    id: z3_enable
    on_press:
      - logger.log: "Z3 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(2)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 32
    component_name: page1.Z4 # Only needed to support changing colors
    id: z4_enable
    on_press:
      - logger.log: "Z4 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(3)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 27
    component_name: page1.Z5 # Only needed to support changing colors
    id: z5_enable
    on_press:
      - logger.log: "Z5 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(4)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 26
    component_name: page1.Z6 # Only needed to support changing colors
    id: z6_enable
    on_press:
      - logger.log: "Z6 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(5)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 25
    component_name: page1.Z7 # Only needed to support changing colors
    id: z7_enable
    on_press:
      - logger.log: "Z7 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(6)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 24
    component_name: page1.Z8 # Only needed to support changing colors
    id: z8_enable
    on_press:
      - logger.log: "Z8 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(7)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 23
    component_name: page1.Z9 # Only needed to support changing colors
    id: z9_enable
    on_press:
      - logger.log: "Z9 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(8)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 22
    component_name: page1.Z10 # Only needed to support changing colors
    id: z10_enable
    on_press:
      - logger.log: "Z10 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(9)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 21
    component_name: page1.Z11 # Only needed to support changing colors
    id: z11_enable
    on_press:
      - logger.log: "Z11 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(10)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 20
    component_name: page1.Z12 # Only needed to support changing colors
    id: z12_enable
    on_press:
      - logger.log: "Z12 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(11)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 19
    component_name: page1.Z13 # Only needed to support changing colors
    id: z13_enable
    on_press:
      - logger.log: "Z13 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(12)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 18
    component_name: page1.Z14 # Only needed to support changing colors
    id: z14_enable
    on_press:
      - logger.log: "Z14 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(13)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 29
    component_name: page1.Z15 # Only needed to support changing colors
    id: z15_enable
    on_press:
      - logger.log: "Z15 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(14)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 28
    component_name: page1.Z16 # Only needed to support changing colors
    id: z16_enable
    on_press:
      - logger.log: "Z16 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(15)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 31
    component_name: page1.DR1 # Only needed to support changing colors
    id: dr1_enable
    on_press:
      - logger.log: "DR1 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(16)->toggle();
               }

  - platform: nextion
    page_id: 1
    component_id: 30
    component_name: page1.DR2 # Only needed to support changing colors
    id: dr2_enable
    on_press:
      - logger.log: "DR2 Enable was touched"
      - lambda: |- 
               if (id(active_valve).state) {
                 }else{
                   id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(17)->toggle();
               }

#-------------------------------------------------------------
#------ Home Assistant Reporting Valves open/closed ----------
#-------------------------------------------------------------
#-------------------------------------------------------------

  - platform: homeassistant
    id: smv1_off
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_smv1_off
  - platform: homeassistant  
    id: smv1_on
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_smv1_on
  - platform: homeassistant
    id: smv2_off
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_smv2_off
  - platform: homeassistant
    id: smv2_on
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_smv2_on
  - platform: homeassistant
    id: wmv1_off
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_wmv1_off
  - platform: homeassistant
    id: wmv1_on
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_wmv1_on
  - platform: homeassistant
    id: wmv2_off
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_wmv2_off
  - platform: homeassistant
    id: wmv2_on
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_wmv2_on
  - platform: homeassistant
    id: wmv3_off
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_wmv3_off
  - platform: homeassistant
    id: wmv3_on
    entity_id: binary_sensor.esp32_multi_control_7inch_enc_nex3_wmv3_on
#----------------------------------------------------------------------
#----------------------------------------------------------------------
#-------------------------------------------------------------
#------ GPIOs triggered by relay controlled by ---------------
#----------Valve status leads --------------------------------
#-------------------------------------------------------------
#-------------------------------------------------------------

  - platform: gpio
    name: "${enc_id}_SMV1_Off"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 8
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "${enc_id}_SMV1_On"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 9
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "${enc_id}_SMV2_Off"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 10
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "${enc_id}_SMV2_On"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 11
      mode: INPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}_WMV1_Off"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 12
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "${enc_id}_WMV1_On"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 13
      mode: INPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}_WMV2_Off"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub_2
      number: 8
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "${enc_id}_WMV2_On"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub_2
      number: 9
      mode: INPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}_WMV3_Off"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub_2
      number: 10
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "${enc_id}_WMV3_On"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub_2
      number: 11
      mode: INPUT
      inverted: true

#-------------------------------------------------------------
#-------------------------------------------------------------
#-------------------------------------------------------------
#------ Home Assistant Leak Sensors open/closed ----------
#-------------------------------------------------------------
#-------------------------------------------------------------

  - platform: homeassistant
    name: "${enc_id} Master Bath Flood"
    id: mas_bath_flood
    entity_id: binary_sensor.z_wave_wireless_flood_freeze_sensor_sensor_state_water

  - platform: homeassistant
    name: "${enc_id} Wtr Htr Flood"
    id: wtr_htr_flood
    entity_id: binary_sensor.water_heater_flood_detector_sensor_state_water_2

  - platform: homeassistant
    name: "${enc_id} Kit Sink Flood"
    id: kit_sink_flood
    entity_id: binary_sensor.kitchen_sink_leak_detector_sensor_state_water_2

  - platform: homeassistant
    name: "${enc_id} Guest Bath Flood"
    id: guest_bath_flood
    entity_id: binary_sensor.guest_bath_leak_sensor_sensor_state_water_2

  - platform: homeassistant
    name: "${enc_id} Guest Sink Flood"
    id: guest_bath_sink_flood
    entity_id: binary_sensor.gbr_sink_leak_detector_sensor_state_water_2

  - platform: homeassistant
    name: "${enc_id} Master Sink Flood"
    id: mas_bath_sink_flood
    entity_id: binary_sensor.mbr_sink_leak_detector_sensor_state_water_2

  - platform: homeassistant
    name: "${enc_id} Insteon Master Bath Sink"
    id: ins_mas_bath_sink
    entity_id: binary_sensor.masterbathsink_dry

  - platform: homeassistant
    name: "${enc_id} Insteon Master Bath"
    id: ins_mas_bath
    entity_id: binary_sensor.mas_bath_leak_dry

  - platform: homeassistant
    name: "${enc_id} Insteon Kitchen Sink"
    id: ins_kit_sink
    entity_id: binary_sensor.kitchen_sink_dry

  - platform: homeassistant
    name: "${enc_id} Insteon Guest Bath"
    id: ins_guest_bath
    entity_id: binary_sensor.70_79_88_1_dry

  - platform: homeassistant
    name: "${enc_id} Insteon Refrigerator"
    id: ins_fridge
    entity_id: binary_sensor.70_76_fc_1_dry

  - platform: homeassistant
    name: "${enc_id} Insteon Dishwasher"
    id: ins_dishwasher
    entity_id: binary_sensor.70_7a_18_1_dry

  - platform: homeassistant
    name: "${enc_id} Insteon Water Htr "
    id: ins_wtr_htr
    entity_id: binary_sensor.water_heater_dry
#--------------------------------------------------------
#----------------------------------------------------------
#----------------------------------------------------------
 

#-------------------------------------------------------------
#-- Home Assistant Reporting Water Heater Power om/off--------
#-------------------------------------------------------------
#-------------------------------------------------------------

  - platform: homeassistant
    id: hw_htr_switch
    entity_id: switch.direct_wire_40a_outdoor_switch_500s
#----------------------------------------------------------
#-------------------------------------------------------------
switch:

 
#-------------------------------------------------------------
#------  Main Valves (5-wire) open/closed --------------------
#-------------------------------------------------------------
#-------------------------------------------------------------


  - platform: gpio
    id: ${enc_id}_dpdt3
    name: "${enc_id}-1 Main Water Relay"   
    pin:
      pcf8574: pcf8574_hub_3
      number: 10
      mode: OUTPUT
      inverted: true


  - platform: gpio
    id: ${enc_id}_dpdt4
    name: "${enc_id}-1 Irrigation Water Relay"   
    pin:
      pcf8574: pcf8574_hub_3
      number: 11
      mode: OUTPUT
      inverted: true

  - platform: gpio
    id: ${enc_id}_dpdt5
    name: "${enc_id}-2 Hot Water Relay"   
    pin:
      pcf8574: pcf8574_hub_3
      number: 12
      mode: OUTPUT
      inverted: true

  - platform: gpio
    id: ${enc_id}_dpdt1
    name: "${enc_id}-1 Sprinkler Main Relay"   
    pin:
      pcf8574: pcf8574_hub_3
      number: 8
      mode: OUTPUT
      inverted: true
  - platform: gpio
    id: ${enc_id}_dpdt2
    name: "${enc_id}-2 Sprinkler Main Relay"   
    pin:
      pcf8574: pcf8574_hub_3
      number: 9
      mode: OUTPUT
      inverted: true


#-------------------------------------------------------------
#------  Sprinkler Zone Valves (5-wire) open/closed ----------
#-------------------------------------------------------------
#-------------------------------------------------------------



  - platform: gpio
    name: "${enc_id}-Valve1"
    id: lawn_sprinkler_valve_sw0
    pin:
      pcf8574: pcf8574_hub
      number: 0
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve2"
    id: lawn_sprinkler_valve_sw1
    pin:
      pcf8574: pcf8574_hub
      number: 1
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve3"
    id: lawn_sprinkler_valve_sw2
    pin:
      pcf8574: pcf8574_hub
      number: 2
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "${enc_id}-Valve4"
    id: lawn_sprinkler_valve_sw3
    pin:
      pcf8574: pcf8574_hub
      number: 3
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve5"
    id: lawn_sprinkler_valve_sw4
    pin:
      pcf8574: pcf8574_hub
      number: 4
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "${enc_id}-Valve6"
    id: lawn_sprinkler_valve_sw5
    pin:
      pcf8574: pcf8574_hub
      number: 5
      mode: OUTPUT
      inverted: true
#-------------------------------------------------
#-------------------------------------------------
  - platform: gpio
    name: "${enc_id}-Valve7"
    id: lawn_sprinkler_valve_sw6
    pin:
      pcf8574: pcf8574_hub_2
      number: 0
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve8"
    id: lawn_sprinkler_valve_sw7
    pin:
      pcf8574: pcf8574_hub_2
      number: 1
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve9"
    id: lawn_sprinkler_valve_sw8
    pin:
      pcf8574: pcf8574_hub_3
      number: 3
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "${enc_id}-Valve10"
    id: lawn_sprinkler_valve_sw9
    pin:
      pcf8574: pcf8574_hub_3
      number: 2
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve11"
    id: lawn_sprinkler_valve_sw10
    pin:
      pcf8574: pcf8574_hub_3
      number: 1
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "${enc_id}-Valve12"
    id: lawn_sprinkler_valve_sw11
    pin:
      pcf8574: pcf8574_hub_3
      number: 0
      mode: OUTPUT
      inverted: true
#-------------------------------------------------
  - platform: gpio
    name: "${enc_id}-Valve13"
    id: lawn_sprinkler_valve_sw12
    pin:
      pcf8574: pcf8574_hub_2
      number: 5
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve14"
    id: lawn_sprinkler_valve_sw13
    pin:
      pcf8574: pcf8574_hub_2
      number: 4
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve15"
    id: lawn_sprinkler_valve_sw14
    pin:
      pcf8574: pcf8574_hub_2
      number: 3
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "${enc_id}-Valve16"
    id: lawn_sprinkler_valve_sw15
    pin:
      pcf8574: pcf8574_hub_2

      number: 2
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "${enc_id}-Valve17"
    id: lawn_sprinkler_valve_sw16
    pin:
      pcf8574: pcf8574_hub_3
      number: 4
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "${enc_id}-Valve18"
    id: lawn_sprinkler_valve_sw17
    pin:
      pcf8574: pcf8574_hub_3
      number: 5
      mode: OUTPUT
      inverted: true

#-------------------------------------------------
#-------------------------------------------------
#------------------------------------------------



display:
  - platform: nextion
    id: nextion1
    uart_id: uart_2

    lambda: |-


#-------------------------------------------------
#----------nextion page 1    ---------------------
#------------------------------------------------

          if (id(nextion_page_id) == 0) {


          it.set_backlight_brightness(.5);
          

           if (id(active_valve).state) {
            it.set_component_text("SprStart", "Sprinklers ON");
           }else{

           }


#------------------------------------------------
#----------nextion change text and  -------------
#----------pipe colors based on  status ---------
#------------------------------------------------


          if (id(${enc_id}_dpdt1).state) {
          it.set_component_text("SMV1Rly", "ON");
          it.set_component_font_color("SMV1Rly", "7136");          
          }else{
          it.set_component_text("SMV1Rly", "OFF");
          it.set_component_font_color("SMV1Rly", "63488");
          }
          if (id(${enc_id}_dpdt2).state) {
          it.set_component_text("SMV2Rly", "ON");
          it.set_component_font_color("SMV2Rly", "7136");          
          }else{
          it.set_component_text("SMV2Rly", "OFF");
          it.set_component_font_color("SMV2Rly", "63488");
          }

          if (id(smv1_on).state) {                    
          it.set_component_background_color("smv1pipe1", "2016");
          it.set_component_background_color("smv1pipe2", "2016");

          } else if (id(smv1_off).state) { 
          it.set_component_background_color("smv1pipe1", "63488");
          it.set_component_background_color("smv1pipe2", "63488");

          } else if (id(${enc_id}_dpdt1).state) { 
          it.set_component_background_color("smv1pipe1", "65517");
          it.set_component_background_color("smv1pipe2", "65517");

          } else {
          it.set_component_background_color("smv1pipe1", "2102");
          it.set_component_background_color("smv1pipe2", "2102");
          }

          if (id(smv2_on).state) {

          it.set_component_background_color("smv2pipe1", "2016");
          it.set_component_background_color("smv2pipe2", "2016");

          } else if (id(smv2_off).state) { 
          it.set_component_background_color("smv2pipe1", "63488");
          it.set_component_background_color("smv2pipe2", "63488");

          } else if (id(${enc_id}_dpdt2).state) { 
          it.set_component_background_color("smv2pipe1", "65517");
          it.set_component_background_color("smv2pipe2", "65517");

          } else {
          it.set_component_background_color("smv2pipe1", "2102");
          it.set_component_background_color("smv2pipe2", "2102");
          }


          if (id(${enc_id}_dpdt3).state) {
          it.set_component_text("MVrelay", "ON");
          it.set_component_font_color("MVrelay", "47041");          
          }else{
          it.set_component_text("MVrelay", "OFF");
          it.set_component_font_color("MVrelay", "63488");
          }

          if (id(${enc_id}_dpdt4).state) {
          it.set_component_text("IrrVrelay", "ON");
          it.set_component_font_color("IrrVrelay", "47041");          
          }else{
          it.set_component_text("IrrVrelay", "OFF");
          it.set_component_font_color("IrrVrelay", "63488");
          }

          if (id(${enc_id}_dpdt5).state) {
          it.set_component_text("HWVrelay", "ON");
          it.set_component_font_color("HWVrelay", "47041");          
          }else{
          it.set_component_text("HWVrelay", "OFF");
          it.set_component_font_color("HWVrelay", "63488");
          }

          if (id(wmv1_on).state) {                    
          it.set_component_background_color("mpipe1", "2016");
          it.set_component_background_color("t8", "2016");

          } else if (id(wmv1_off).state) { 
          it.set_component_background_color("mpipe1", "63488");
          it.set_component_background_color("t8", "63488");

          } else if (id(${enc_id}_dpdt3).state) { 
          it.set_component_background_color("mpipe1", "65517");
          it.set_component_background_color("t8", "65517");

          } else {
          it.set_component_background_color("mpipe1", "2102");
          it.set_component_background_color("t8", "2102");
          }


          if (id(wmv2_on).state) {
                   
          it.set_component_background_color("mpipe2", "2016");
          it.set_component_background_color("mpipeext", "2016");
          it.set_component_background_color("mpipeext1", "2016");

          } else if (id(wmv2_off).state) { 
          it.set_component_background_color("mpipe2", "63488");
          it.set_component_background_color("mpipeext", "63488");
          it.set_component_background_color("mpipeext1", "63488");

          } else if (id(${enc_id}_dpdt4).state) { 
          it.set_component_background_color("mpipe2", "65517");
          it.set_component_background_color("mpipeext", "65517");
          it.set_component_background_color("mpipeext1", "65517");

          } else {
          it.set_component_background_color("mpipe2", "2102");
          it.set_component_background_color("mpipeext", "2102");
          it.set_component_background_color("mpipeext1", "2102");

          }

          if (id(wmv3_on).state) {                    
          it.set_component_background_color("t9", "2016");

          } else if (id(wmv3_off).state) { 
          it.set_component_background_color("t9", "63488");

          } else if (id(${enc_id}_dpdt5).state) { 
          it.set_component_background_color("t9", "65517");

          } else {
          it.set_component_background_color("t9", "2102");
          }


#------------------------------------------------
#----------nextion change text of  -------------
#----------display based on  leak status ---------
#------------------------------------------------



            if ((id(mas_bath_flood).state) or
                (id(wtr_htr_flood).state) or
                (id(kit_sink_flood).state) or
                (id(guest_bath_flood).state) or
                (id(guest_bath_sink_flood).state) or
                (id(mas_bath_sink_flood).state) or
                (id(ins_mas_bath_sink).state) or
                (id(ins_mas_bath).state) or
                (id(ins_kit_sink).state) or
                (id(ins_guest_bath).state) or
                (id(ins_fridge).state) or
                (id(ins_dishwasher).state) or
                (id(ins_wtr_htr).state)) {
                it.set_component_text("LeakAlarm", "Leak Detected");
                it.set_component_font_color("LeakAlarm", "63488");     
                }else{
                it.set_component_text("LeakAlarm", "All Leak Detectors Off");
                it.set_component_font_color("LeakAlarm", "65517");  
                }


#------------------------------------------------
#----------nextion sprinkler status fields  -----
#------------------------------------------------
#------------------------------------------------


          it.set_component_font_color("ZNmTime", "65517");
          it.set_component_font_color("MultStatus", "65517");
          it.set_component_font_color("ZoneNum", "65517");          


#------------------------------------------------
#-nextion sprinkler valve time remaining---------
#-------------status fields  --------------------
#------------------------------------------------
#------------------------------------------------



          if (id(lawn_sprinkler_valve_sw0).state) {
            it.set_component_text_printf("ZNmTime", "L. Front Ctr:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw1).state) {
              it.set_component_text_printf("ZNmTime", "L. Front Road:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw2).state) {
              it.set_component_text_printf("ZNmTime", "L. Front Shed:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw3).state) {
              it.set_component_text_printf("ZNmTime", "L. Rear Shed:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw4).state) {
              it.set_component_text_printf("ZNmTime", "L. Rear Cor.:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw5).state) {
              it.set_component_text_printf("ZNmTime", "L. Rear House:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw6).state) {
              it.set_component_text_printf("ZNmTime", "R. Front Road:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw7).state) {
              it.set_component_text_printf("ZNmTime", "R. Front Ctr:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw8).state) {
              it.set_component_text_printf("ZNmTime", "R. Front House:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw9).state) {
              it.set_component_text_printf("ZNmTime", "R. Rear House:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw10).state) {
              it.set_component_text_printf("ZNmTime", "R. Rear Fence:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);            

            }else if (id(lawn_sprinkler_valve_sw11).state) {
              it.set_component_text_printf("ZNmTime", "R. Side House:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw16).state) {
              it.set_component_text_printf("ZNmTime", "Drip 1:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);

            }else if (id(lawn_sprinkler_valve_sw17).state) {
              it.set_component_text_printf("ZNmTime", "Drip 2:   %2d m %2d s", id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(${enc_id}_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);
          }else{
            it.set_component_text("ZNmTime", "");
           
          }



#------------------------------------------------
#-nextion sprinkler pipe color change  ---------
#-----------based on state of zone valve--------
#------------------------------------------------
#------------------------------------------------




          if (id(lawn_sprinkler_valve_sw0).state) {             
            it.set_component_background_color("z1p", "7136"); 
            }else{
            it.set_component_background_color("z1p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw1).state) {             
            it.set_component_background_color("z2p", "7136"); 
            }else{
            it.set_component_background_color("z2p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw2).state) {             
            it.set_component_background_color("z3p", "7136"); 
            }else{
            it.set_component_background_color("z3p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw3).state) {             
            it.set_component_background_color("z4p", "7136"); 
            }else{
            it.set_component_background_color("z4p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw4).state) {             
            it.set_component_background_color("z5p", "7136"); 
            }else{
            it.set_component_background_color("z5p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw5).state) {             
            it.set_component_background_color("z6p", "7136"); 
            }else{
            it.set_component_background_color("z6p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw6).state) {             
            it.set_component_background_color("z13p", "7136"); 
            }else{
            it.set_component_background_color("z13p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw7).state) {             
            it.set_component_background_color("z14p", "7136"); 
            }else{
            it.set_component_background_color("z14p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw8).state) {             
            it.set_component_background_color("z15p", "7136"); 
            }else{
            it.set_component_background_color("z15p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw9).state) {             
            it.set_component_background_color("z7p", "7136"); 
            }else{
            it.set_component_background_color("z7p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw10).state) {             
            it.set_component_background_color("z8p", "7136"); 
            }else{
            it.set_component_background_color("z8p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw11).state) {             
            it.set_component_background_color("z9p", "7136"); 
            }else{
            it.set_component_background_color("z9p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw12).state) {             
            it.set_component_background_color("z16p", "7136"); 
            }else{
            it.set_component_background_color("z16p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw13).state) {             
            it.set_component_background_color("d1p", "7136"); 
            }else{
            it.set_component_background_color("d1p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw14).state) {             
            it.set_component_background_color("d2p", "7136"); 
            }else{
            it.set_component_background_color("d2p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw15).state) {             
            it.set_component_background_color("z10p", "7136"); 
            }else{
            it.set_component_background_color("z10p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw16).state) {             
            it.set_component_background_color("z11p", "7136"); 
            }else{
            it.set_component_background_color("z11p", "63488");
            }
          if (id(lawn_sprinkler_valve_sw17).state) {             
            it.set_component_background_color("z12p", "7136"); 
            }else{
            it.set_component_background_color("z12p", "63488");
            }


 
#------------------------------------------------
#----------nextion display Multiplier  ----------
#--------------------------------------- --------
#------------------------------------------------


          auto multiplier_valve = id(${enc_id}_lawn_sprinkler_ctrlr).multiplier();          
          it.set_component_text_printf("MultStatus", "Multiplier: %.f ", multiplier_valve);


          if (id(active_valve).state){
              it.set_component_text_printf("ZoneNum", "Zone On -  %.0f ", id(active_valve).state);
            }else{
              it.set_component_text("ZoneNum", "All Off");
            }


          it.set_component_text_printf("WHVoltage", " %.1f V", id(hw_htr_voltage).state);
          it.set_component_font_color("WHVoltage", "65503");

          if (id(hw_htr_switch).state) {
              it.set_component_text("WHStatus", "On");
              it.set_component_font_color("WHStatus", "47041"); 
            }else{
              it.set_component_text("WHStatus", "Off");
              it.set_component_font_color("WHStatus", "63488"); 
            }

           }


#------------------------------------------------
#----------nextion page 2------------------------
#------------------------------------------------
#------------------------------------------------


          if (id(nextion_page_id) == 1) {


#------------------------------------------------
#----------nextion change text of  -------------
#--Leak sensor fields based on  leak status -----
#-----Colors flash red and white -------------- 
#--------when leak detected --------------------
#------------------------------------------------


          if (id(mas_bath_flood).state) {
            id(leak_detected_1)=1;
             static int i2 = 0;
             i2++;
               if ((i2 % 2) == 0){
                  it.set_component_text("MBath", "Master Bath - Wet");
                  it.set_component_font_color("MBath", "63488"); 
               }else{
                  it.set_component_text("MBath", "Master Bath - Wet");
                  it.set_component_font_color("MBath", "65503"); 
               } 
          }else{
            id(leak_detected_1)=0;
              it.set_component_text("MBath", "Master Bath - Dry");
              it.set_component_font_color("MBath", "47041");  
          }

          if (id(wtr_htr_flood).state) {
            id(leak_detected_2)=1;
             static int i3 = 0;
             i3++;
               if ((i3 % 2) == 0){
                  it.set_component_text("Sen2", "Water Heater - Wet");
                  it.set_component_font_color("Sen2", "63488"); 
               }else{
                  it.set_component_text("Sen2", "Water Heater - Wet");
                  it.set_component_font_color("Sen2", "65503"); 
               } 
          }else{
            id(leak_detected_2)=0;
              it.set_component_text("Sen2", "Water Heater - Dry");
              it.set_component_font_color("Sen2", "47041");  
          }

          if (id(kit_sink_flood).state) {
            id(leak_detected_3)=1;
            id(nextion1).update_components_by_prefix("page0.");
             static int i4 = 0;
             i4++;
               if ((i4 % 2) == 0){
                  it.set_component_text("KitSink", "Kitchen Sink - Wet");
                  it.set_component_font_color("KitSink", "63488"); 
               }else{
                  it.set_component_text("KitSink", "Kitchen Sink - Wet");
                  it.set_component_font_color("KitSink", "65503"); 
               } 
          }else{
            id(leak_detected_3)=0;
              it.set_component_text("KitSink", "Kitchen Sink - Dry");
              it.set_component_font_color("KitSink", "47041");
              id(nextion1).update_components_by_prefix("page0.");  
          }

          if (id(guest_bath_flood).state) {
            id(leak_detected_4)=1;
             static int i5 = 0;
             i5++;
               if ((i5 % 2) == 0){
                  it.set_component_text("GBath", "Guest Bath - Wet");
                  it.set_component_font_color("GBath", "63488"); 
               }else{
                  it.set_component_text("GBath", "Guest Bath - Wet");
                  it.set_component_font_color("GBath", "65503"); 
               } 
          }else{
            id(leak_detected_4)=0;
              it.set_component_text("GBath", "Guest Bath - Dry");
              it.set_component_font_color("GBath", "47041");  
          }

          if (id(guest_bath_sink_flood).state) {
            id(leak_detected_5)=1;
             static int i6 = 0;
             i6++;
               if ((i6 % 2) == 0){
                   it.set_component_text("GBSink", "Guest Bath Sink - Wet");
                  it.set_component_font_color("GBSink", "63488"); 
               }else{
                  it.set_component_text("GBSink", "Guest Bath Sink - Wet");
                  it.set_component_font_color("GBSink", "65503"); 
               } 
          }else{
            id(leak_detected_5)=0;
              it.set_component_text("GBSink", "Guest Bath Sink - Dry");
              it.set_component_font_color("GBSink", "47041");  
          }

          if (id(mas_bath_sink_flood).state) {
            id(leak_detected_6)=1;
             static int i7 = 0;
             i7++;
               if ((i7 % 2) == 0){
                  it.set_component_text("MasBSink", "Master Bath Sink - Wet");
                  it.set_component_font_color("MasBSink", "63488"); 
               }else{
                  it.set_component_text("MasBSink", "Master Bath Sink - Wet");
                  it.set_component_font_color("MasBSink", "65503"); 
               } 
          }else{
            id(leak_detected_6)=0;
              it.set_component_text("MasBSink", "Master Bath Sink - Dry");
              it.set_component_font_color("MasBSink", "47041");  
          }

          if (id(ins_mas_bath_sink).state) {
            id(leak_detected_7)=1;
             static int i8 = 0;
             i8++;
               if ((i8 % 2) == 0){
                  it.set_component_text("InsMBSink", "Ins Master Bath Sink - Wet");
                  it.set_component_font_color("InsMBSink", "63488"); 
               }else{
                  it.set_component_text("InsMBSink", "Ins Master Bath Sink - Wet");
                  it.set_component_font_color("InsMBSink", "65503"); 
               } 
          }else{
            id(leak_detected_7)=0;
              it.set_component_text("InsMBSink", "Ins Master Bath Sink - Dry");
              it.set_component_font_color("InsMBSink", "47041");  
          }

          if (id(ins_mas_bath).state) {
            id(leak_detected_8)=1;
             static int i9 = 0;
             i9++;
               if ((i9 % 2) == 0){
                  it.set_component_text("InsMBath", "Ins Master Bath  - Wet");
                  it.set_component_font_color("InsMBath", "63488"); 
               }else{
                  it.set_component_text("InsMBath", "Ins Master Bath - Wet");
                  it.set_component_font_color("InsMBath", "65503"); 
               } 
          }else{
            id(leak_detected_8)=0;
              it.set_component_text("InsMBath", "Ins Master Bath - Dry");
              it.set_component_font_color("InsMBath", "47041");  
          }   

          if (id(ins_kit_sink).state) {
            id(leak_detected_9)=1;
             static int ii = 0;
             ii++;
               if ((ii % 2) == 0){
                  it.set_component_text("InsKitSink", "Ins Kitchen Sink - Wet");
                  it.set_component_font_color("InsKitSink", "63488"); 
               }else{
                  it.set_component_text("InsKitSink", "Ins Kitchen Sink - Wet");
                  it.set_component_font_color("InsKitSink", "65503"); 
               } 
          }else{
            id(leak_detected_9)=0;
              it.set_component_text("InsKitSink", "Ins Kitchen Sink - Dry");
              it.set_component_font_color("InsKitSink", "47041");  
          }
        
 
          if (id(ins_guest_bath).state) {
            id(leak_detected_10)=1;
             static int ii1 = 0;
             ii1++;
               if ((ii1 % 2) == 0){
                  it.set_component_text("InsGBath", "Insteon Guest Bath - Wet");
                  it.set_component_font_color("InsGBath", "63488"); 
               }else{
                  it.set_component_text("InsGBath", "Insteon Guest Bath - Wet");
                  it.set_component_font_color("InsGBath", "65503"); 
               } 
          }else{
            id(leak_detected_10)=0;
              it.set_component_text("InsGBath", "Insteon Guest Bath - Dry");
              it.set_component_font_color("InsGBath", "47041");  
          }


          if (id(ins_fridge).state) {
            id(leak_detected_11)=1;
             static int ii2 = 0;
             ii2++;
               if ((ii2 % 2) == 0){
                  it.set_component_text("InsFridge", "Insteon Refrigerator - Wet");
                  it.set_component_font_color("InsFridge", "63488"); 
               }else{
                  it.set_component_text("InsFridge", "Insteon Refrigerator - Wet");
                  it.set_component_font_color("InsFridge", "65503"); 
               } 
          }else{
            id(leak_detected_11)=0;
              it.set_component_text("InsFridge", "Insteon Refrigerator - Dry");
              it.set_component_font_color("InsFridge", "47041");  
          }


          if (id(ins_dishwasher).state) {
            id(leak_detected_12)=1;                        
             static int ii3 = 0;
             ii3++;
               if ((ii3 % 2) == 0){
                  it.set_component_text("InsDishW", "Insteon Dishwasher - Wet");
                  it.set_component_font_color("InsDishW", "63488"); 
               }else{
                  it.set_component_text("InsDishW", "Insteon Dishwasher - Wet");
                  it.set_component_font_color("InsDishW", "65503"); 
               } 
          }else{
            id(leak_detected_12)=0;
              it.set_component_text("InsDishW", "Insteon Dishwasher - Dry");
              it.set_component_font_color("InsDishW", "47041");  
          }


          if (id(ins_wtr_htr).state) {
            id(leak_detected_13)=1;
             static int i1 = 0;
             i1++;
               if ((i1 % 2) == 0){
                  it.set_component_text("InsWtrHtr", "Insteon Water Heater - Wet");
                  it.set_component_font_color("InsWtrHtr", "63488"); 
               }else{
                  it.set_component_text("InsWtrHtr", "Insteon Water Heater - Wet");
                  it.set_component_font_color("InsWtrHtr", "65503"); 
               } 
          }else{
             id(leak_detected_13)=0;            
              it.set_component_text("InsWtrHtr", "Insteon Water Heater - Dry");
              it.set_component_font_color("InsWtrHtr", "47041");  
          }


#------------------------------------------------
#----------nextion Enable/Disable buttons -------
#------------text and color change---------------
#------------------------------------------------



          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(0)->state) {
          it.set_component_text("Z1", "Z1 Enabled");
          it.set_component_font_color("Z1", "2239");          
          } else {
          it.set_component_text("Z1", "Z1 Disbld");
          it.set_component_font_color("Z1", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(1)->state) {
          it.set_component_text("Z2", "Z2 Enabled");
          it.set_component_font_color("Z2", "2239");          
          } else {
          it.set_component_text("Z2", "Z2 Disbld");
          it.set_component_font_color("Z2", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(2)->state) {
          it.set_component_text("Z3", "Z3 Enabled");
          it.set_component_font_color("Z3", "2239");          
          } else {
          it.set_component_text("Z3", "Z3 Disbld");
          it.set_component_font_color("Z3", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(3)->state) {
          it.set_component_text("Z4", "Z4 Enabled");
          it.set_component_font_color("Z4", "2239");          
          } else {
          it.set_component_text("Z4", "Z4 Disbld");
          it.set_component_font_color("Z4", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(4)->state) {
          it.set_component_text("Z5", "Z5 Enabled");
          it.set_component_font_color("Z5", "2239");          
          } else {
          it.set_component_text("Z5", "Z5 Disbld");
          it.set_component_font_color("Z5", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(5)->state) {
          it.set_component_text("Z6", "Z6 Enabled");
          it.set_component_font_color("Z6", "2239");          
          } else {
          it.set_component_text("Z6", "Z6 Disbld");
          it.set_component_font_color("Z6", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(6)->state) {
          it.set_component_text("Z7", "Z7 Enabled");
          it.set_component_font_color("Z7", "2239");          
          } else {
          it.set_component_text("Z7", "Z7 Disbld");
          it.set_component_font_color("Z7", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(7)->state) {
          it.set_component_text("Z8", "Z8 Enabled");
          it.set_component_font_color("Z8", "2239");          
          } else {
          it.set_component_text("Z8", "Z8 Disbld");
          it.set_component_font_color("Z8", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(8)->state) {
          it.set_component_text("Z9", "Z9 Enabled");
          it.set_component_font_color("Z9", "2239");          
          } else {
          it.set_component_text("Z9", "Z9 Disbld");
          it.set_component_font_color("Z9", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(9)->state) {
          it.set_component_text("Z10", "Z10 Enabled");
          it.set_component_font_color("Z10", "2239");          
          } else {
          it.set_component_text("Z10", "Z10 Disbld");
          it.set_component_font_color("Z10", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(10)->state) {
          it.set_component_text("Z11", "Z11 Enabled");
          it.set_component_font_color("Z11", "2239");          
          } else {
          it.set_component_text("Z11", "Z11 Disbld");
          it.set_component_font_color("Z11", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(11)->state) {
          it.set_component_text("Z12", "Z12 Enabled");
          it.set_component_font_color("Z12", "2239");          
          } else {
          it.set_component_text("Z12", "Z12 Disbld");
          it.set_component_font_color("Z12", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(12)->state) {
          it.set_component_text("Z13", "Z13 Enabled");
          it.set_component_font_color("Z13", "2239");          
          } else {
          it.set_component_text("Z13", "Z13 Disbld");
          it.set_component_font_color("Z13", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(13)->state) {
          it.set_component_text("Z14", "Z14 Enabled");
          it.set_component_font_color("Z14", "2239");          
          } else {
          it.set_component_text("Z14", "Z14 Disbld");
          it.set_component_font_color("Z14", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(14)->state) {
          it.set_component_text("Z15", "Z15 Enabled");
          it.set_component_font_color("Z15", "2239");          
          } else {
          it.set_component_text("Z15", "Z15 Disbld");
          it.set_component_font_color("Z15", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(15)->state) {
          it.set_component_text("Z16", "Z16 Enabled");
          it.set_component_font_color("Z16", "2239");          
          } else {
          it.set_component_text("Z16", "Z16 Disbld");
          it.set_component_font_color("Z16", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(16)->state) {
          it.set_component_text("DR1", "DR1 Enabled");
          it.set_component_font_color("DR1", "2239");          
          } else {
          it.set_component_text("DR1", "DR1 Disbld");
          it.set_component_font_color("DR1", "63488");          
          }

          if(id(${enc_id}_lawn_sprinkler_ctrlr).enable_switch(17)->state) {
          it.set_component_text("DR2", "DR2 Enabled");
          it.set_component_font_color("DR2", "2239");          
          } else {
          it.set_component_text("DR2", "DR2 Disbld");
          it.set_component_font_color("DR2", "63488");          
          }


          it.set_component_font_color("Tcpu", "65517");
          it.set_component_font_color("sig", "65517"); 
          it.set_component_font_color("IP", "65517"); 
          it.set_component_font_color("SWVer", "65517"); 


#------------------------------------------------
#----------nextion  display system info ---------
#------------------------------------------------
#------------------------------------------------



          it.set_component_text_printf("sig", "Signal:%.1f dbm", id(my_wifi_2).state);  
          it.set_component_text_printf("IP", "IP:%s", id(myip_2).state.c_str());
          it.set_component_text_printf("Tcpu", "CPU\xB0- %.1f \xB0 C", id(internal_cpu).state);      
          it.set_component_text_printf("SWVer", "SW: %s", id(esp_version).state.c_str());





          }


          





